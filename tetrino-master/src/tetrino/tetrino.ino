
//imports the SPI library (needed to communicate with Gamebuino's screen)
#include <SPI.h>
//imports the Gamebuino library
#include <Gamebuino.h>
//imports Simple Tetris Clone (STC) library
#include "game.h"
#include "gb_platform.h"

//creates a Gamebuino object named gb
Gamebuino gb;
// STC game object
stc::Game game;
// Gamebuino Platform object
stc::PlatformGB platform;

// logo bitmap
const byte logo[] PROGMEM = {64,30,0x0,0x8,0x0,0x8,0x0,0x80,0x0,0x0,0x0,0x8,0x0,0x18,0x1,0x80,0x0,0x0,0x0,0x18,0x0,0x1c,0x1,0x40,0x0,0x0,0x0,0x38,0x0,0x34,0x3,0xc0,0x0,0x0,0x0,0x6c,0x0,0x3c,0x7,0x40,0x0,0x0,0x0,0x7c,0x0,0x3e,0x7,0xa0,0x0,0x0,0x0,0xff,0xff,0xff,0xff,0xff,0xf0,0x0,0x0,0xc0,0x0,0x0,0x0,0x0,0x10,0x0,0x1,0xff,0xf9,0xff,0xef,0xff,0xb0,0x0,0x3,0xff,0xf9,0xff,0xcf,0xff,0x30,0x0,0x7,0xff,0xf1,0xff,0xdf,0xff,0x30,0x0,0x7,0xff,0xf1,0xff,0x9f,0xfe,0x70,0x0,0xf,0xff,0xf3,0xff,0xbf,0xfe,0x70,0x0,0x1f,0xff,0xe3,0xff,0xbf,0xfc,0xf0,0x0,0x10,0x0,0x0,0x0,0x0,0x0,0xf0,0x0,0x10,0x0,0x0,0x0,0x3f,0xff,0xf0,0x0,0x1f,0xff,0x9f,0xfe,0x7f,0xff,0xf0,0x0,0x1f,0xff,0xbf,0xfc,0x7f,0xff,0xe0,0x0,0x1d,0xff,0x3f,0xfd,0x7f,0xff,0xe0,0x0,0x11,0x5f,0x7f,0xf9,0x7f,0xff,0xc0,0x0,0x0,0xc,0x7f,0xfb,0x7f,0xff,0xc0,0x0,0x0,0xc,0xff,0xfb,0x7f,0xff,0x80,0x0,0x0,0x1c,0xff,0xf3,0x7f,0xff,0x80,0x0,0x0,0x1,0xff,0xf7,0x7f,0xff,0x80,0x0,0x0,0x0,0x0,0x7,0x0,0x0,0x0,0x0,0x0,0x7,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x7,0xff,0xff,0x0,0x0,0x0,0x0,0x0,0x7,0x9f,0xbf,0x0,0x0,0x0,0x0,0x0,0x6,0x14,0xff,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2f,0x0,0x0,0x0,0x0,};

// the setup routine runs once when Gamebuino starts up
void setup(){
  // initialize the Gamebuino object
  gb.begin();
  // shows the start menu
  gb.titleScreen(F("Tetrino by Joff (STC)"), logo);
  
  // Initialize game
  platform.setGamebuinoRef(&gb);
  game.init(&platform);
}

// the loop routine runs over and over again forever
void loop(){
  //updates the gamebuino (the display, the sound, the auto backlight... everything)
  //returns true when it's time to render a new frame (20 times/second)
  if(gb.update())
  {
    game.update();
        
    int errorCode;
    errorCode = game.errorCode();
    if (errorCode == stc::Game::ERROR_PLAYER_QUITS)
    {
      // User quits - prepare for restart
      game.end();
      game.init(&platform);
      gb.titleScreen(F("Tetrino by Joff (STC)"), logo);
    }
    else if (errorCode != stc::Game::ERROR_NONE)
    {
      // Game was interrupted or an error happened, end the game
      game.end();
      gb.titleScreen(F("Tetrino by Joff (STC)"), logo);
    }
  }
}

